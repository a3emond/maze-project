name: Build and Deploy Blazor WebAssembly

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Debug Step: List files in the repository
    - name: List files for debugging
      run: ls -R

    # Step 2: Set up .NET environment
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0'

    # Step 3: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore MazeGameBlazorApp/MazeGameBlazor/MazeGameBlazor/MazeGameBlazor.csproj

    # Step 4: Build the Blazor WebAssembly app
    - name: Build Blazor WebAssembly
      run: dotnet publish MazeGameBlazorApp/MazeGameBlazor/MazeGameBlazor/MazeGameBlazor.csproj -c Release -o build

    # Step 5: Deploy Built Files to the Production Server
    - name: Deploy Built Files to Server
      run: |
        # Install sshpass for password-based SSH
        sudo apt-get update && sudo apt-get install -y sshpass
    
        # Adjust permissions to allow deletion and update
        sshpass -p "${{ secrets.SERVER_SSH_PASSWORD }}" \
        ssh -o StrictHostKeyChecking=no a3emond@aedev.pro "
          sudo chown -R a3emond:a3emond /var/www/maze.aedev.pro &&
          sudo chmod -R u+w /var/www/maze.aedev.pro
        "
    
        # Remove old build files
        sshpass -p "${{ secrets.SERVER_SSH_PASSWORD }}" \
        ssh -o StrictHostKeyChecking=no a3emond@aedev.pro "rm -rf /var/www/maze.aedev.pro/*"
    
        # Deploy the new build files
        sshpass -p "${{ secrets.SERVER_SSH_PASSWORD }}" \
        scp -o StrictHostKeyChecking=no -r ./build/* a3emond@aedev.pro:/var/www/maze.aedev.pro/
      env:
        SERVER_SSH_PASSWORD: ${{ secrets.SERVER_SSH_PASSWORD }}

