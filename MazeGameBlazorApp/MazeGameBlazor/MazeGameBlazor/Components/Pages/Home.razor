@page "/"
@rendermode InteractiveServer
@using MazeGameBlazor.Database.Models
@inject BlogService BlogService
<PageTitle>Home</PageTitle>

<div class="home-container">
    <header class="hero-section">
        <h1>Welcome to My Algorithm Project!</h1>
        <p>Explore the latest developments and updates about the maze game project.</p>
        <a href="https://github.com/a3emond/maze-project" target="_blank" class="github-button">
            <i class="fab fa-github"></i> View on GitHub
        </a>
    </header>

    <!-- Latest News Section (Last Blog Entry) -->
    <section class="news-section">
        <h2>Latest News</h2>

        @if (post != null)
        {
            <div class="news-card">
                <BlogCard Id="@post.Id"
                          Title="@post.Title"
                          Content="@post.Content"
                          Author="@post.Author?.UserName"
                          CreatedAt="@post.CreatedAt"
                          LikeCount="@post.LikeCount"
                          MediaType="@mediaType"
                          MediaUrl="@mediaUrl" />
            </div>
        }
        else
        {
            <p class="no-news">No latest blog post available.</p>
        }
    </section>

    <!-- Game Description -->
    <section class="game-section">
        <h2>Game Description</h2>
        <p>
            This is a maze game where you have to find the exit. You can move using the arrow keys on your keyboard.
            The game is built using the Blazor framework and C# programming language.
        </p>
        <a href="/play" class="play-button"><i class="fas fa-play"></i> Play Now</a>
    </section>
</div>

@code {
    private BlogPost? post;
    private MediaType mediaType = MediaType.Image;
    private string mediaUrl = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            post = await BlogService.GetLatestBlogPostAsync();

            if (post == null)
            {
                Console.WriteLine("No blog post found.");
                return;
            }

            Console.WriteLine($"Post Title: {post.Title}, Media: {post.Media}");

            if (post.Media != null)
            {
                mediaType = post.Media.Type;
                mediaUrl = post.Media.Url;
                Console.WriteLine($"Media Type: {mediaType}, Media URL: {mediaUrl}");
            }
            else
            {
                Console.WriteLine("No media found for this post.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching blog post: {ex.Message}");
        }
    }
}
